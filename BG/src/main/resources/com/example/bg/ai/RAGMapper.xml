<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.bg.ai.RAGMapper">
    

    <select id="searchPoemsByKeyword" parameterType="String" resultType="com.example.bg.poem.Poem">
        SELECT * FROM poem 
        WHERE title LIKE CONCAT('%', #{keyword}, '%') 
           OR poet LIKE CONCAT('%', #{keyword}, '%')
           OR text LIKE CONCAT('%', #{keyword}, '%')
           OR background LIKE CONCAT('%', #{keyword}, '%')
           OR appreciation LIKE CONCAT('%', #{keyword}, '%')
           OR translation LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY 
            CASE 
                WHEN title LIKE CONCAT('%', #{keyword}, '%') THEN 1
                WHEN poet LIKE CONCAT('%', #{keyword}, '%') THEN 2
                WHEN text LIKE CONCAT('%', #{keyword}, '%') THEN 3
                ELSE 4
            END
        LIMIT 10
    </select>
    
    <select id="searchPoemsByCategory" parameterType="String" resultType="com.example.bg.poem.Poem">
        SELECT * FROM poem 
        WHERE category LIKE CONCAT('%', #{category}, '%')
        LIMIT 10
    </select>
    
    <select id="searchPoemsByPoet" parameterType="String" resultType="com.example.bg.poem.Poem">
        SELECT * FROM poem 
        WHERE poet LIKE CONCAT('%', #{poet}, '%')
        LIMIT 10
    </select>
    
    <select id="getAllPoems" resultType="com.example.bg.poem.Poem">
        SELECT * FROM poem 
        ORDER BY PID
        LIMIT 100
    </select>
    
    <select id="getRandomPoems" parameterType="int" resultType="com.example.bg.poem.Poem">
        SELECT * FROM poem 
        ORDER BY RAND() 
        LIMIT #{limit}
    </select>

    <!-- 🆕 新增：根据PID查询单首诗词 -->
    <select id="getPoemByPID" parameterType="java.lang.String" resultType="com.example.bg.poem.Poem">
        SELECT PID, Title, Poet, Text, Category, Background, Appreciation, Translation
        FROM poem
        WHERE PID = #{poemId}
    </select>

    <!-- 🆕 新增：根据多个PID批量查询诗词 -->
    <select id="getPoemsByPIDs" parameterType="java.util.List" resultType="com.example.bg.poem.Poem">
        SELECT PID, Title, Poet, Text, Category, Background, Appreciation, Translation
        FROM poem
        WHERE PID IN
        <foreach item="pid" collection="list" open="(" separator="," close=")">
            #{pid}
        </foreach>
        ORDER BY PID
    </select>

    <!-- 🆕 新增：检查PID是否存在 -->
    <select id="checkPoemExists" parameterType="java.lang.String" resultType="java.lang.Boolean">
        SELECT COUNT(*) > 0
        FROM poem
        WHERE PID = #{poemId}
    </select>

    <!-- 🆕 新增：获取诗词总数（用于缓存验证） -->
    <select id="countAllPoems" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM poem
    </select>

    <!-- 🆕 新增：获取所有诗词（用于RAG初始化） -->
    <select id="getAllPoemsForRAG" resultType="com.example.bg.poem.Poem">
        SELECT PID, Title, Poet, Text, Category, Background, Appreciation, Translation
        FROM poem
        ORDER BY PID
    </select>
    
</mapper>